/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI Tutorial
 * OpenAPI Tutorial by halhorn
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    ResponseQuestionnaireStatus,
    ResponseQuestionnaireStatusFromJSON,
    ResponseQuestionnaireStatusToJSON,
} from '../models';

export interface QuestionnairesQuestionnairesTypeStatusGetRequest {
    questionnairesType: ResponseQuestionnaireStatus;
}

/**
 * QuestionnairesApi - interface
 * 
 * @export
 * @interface QuestionnairesApiInterface
 */
export interface QuestionnairesApiInterface {
    /**
     * 詳細内容
     * @summary アンケートの回答状態を取得します。
     * @param {ResponseQuestionnaireStatus} questionnairesType 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QuestionnairesApiInterface
     */
    questionnairesQuestionnairesTypeStatusGetRaw(requestParameters: QuestionnairesQuestionnairesTypeStatusGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ResponseQuestionnaireStatus>>;

    /**
     * 詳細内容
     * アンケートの回答状態を取得します。
     */
    questionnairesQuestionnairesTypeStatusGet(requestParameters: QuestionnairesQuestionnairesTypeStatusGetRequest, initOverrides?: RequestInit): Promise<ResponseQuestionnaireStatus>;

}

/**
 * 
 */
export class QuestionnairesApi extends runtime.BaseAPI implements QuestionnairesApiInterface {

    /**
     * 詳細内容
     * アンケートの回答状態を取得します。
     */
    async questionnairesQuestionnairesTypeStatusGetRaw(requestParameters: QuestionnairesQuestionnairesTypeStatusGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ResponseQuestionnaireStatus>> {
        if (requestParameters.questionnairesType === null || requestParameters.questionnairesType === undefined) {
            throw new runtime.RequiredError('questionnairesType','Required parameter requestParameters.questionnairesType was null or undefined when calling questionnairesQuestionnairesTypeStatusGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/questionnaires/{questionnairesType}/status`.replace(`{${"questionnairesType"}}`, encodeURIComponent(String(requestParameters.questionnairesType))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResponseQuestionnaireStatusFromJSON(jsonValue));
    }

    /**
     * 詳細内容
     * アンケートの回答状態を取得します。
     */
    async questionnairesQuestionnairesTypeStatusGet(requestParameters: QuestionnairesQuestionnairesTypeStatusGetRequest, initOverrides?: RequestInit): Promise<ResponseQuestionnaireStatus> {
        const response = await this.questionnairesQuestionnairesTypeStatusGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
